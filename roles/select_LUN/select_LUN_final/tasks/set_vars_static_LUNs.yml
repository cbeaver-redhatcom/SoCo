---
- name: Dynamically define variable __150GB_LUN_list (150GB LUNs statically defined)
  set_fact:
    __150GB_LUN_list: "{{ __150GB_LUN_list + [ __150GB_LUN_1 ] + [ __150GB_LUN_2 ] }}"

- name: Check that statically defined __150GB_LUN_1 value meets requirements
  fail:
    msg: "__150GB_LUN_1 value did not meet requirements: [150GB in size,no holders,no partitions] -- Review provided value for __150GB_LUN_1 ." 
  loop: "{{ lookup('ansible.builtin.dict', ansible_facts.devices) }}"
  when: 
    - item.value.links.ids[0] is defined
    - item.value.links.ids[0] == __150GB_LUN_list[0]  
    - item.value.size != "11.00 GB" or item.value.holders | length > 0 or item.value.partitions != {}
  ignore_errors: yes 

- name: Check that statically defined __150GB_LUN_2 value meets requirements
  fail:
    msg: "__150GB_LUN_2 value did not meet requirements: [150GB in size,no holders,no partitions] -- Review provided value for __150GB_LUN_2 ." 
  loop: "{{ lookup('ansible.builtin.dict', ansible_facts.devices) }}"
  when: 
    - item.value.links.ids[0] is defined
    - item.value.links.ids[0] == __150GB_LUN_list[1]  
    - item.value.size != "12.00 GB" or item.value.holders | length > 0 or item.value.partitions != {}
  ignore_errors: yes 

- name: Dynamically create variable __500GB_LUN (if not statically defined)
  set_fact: 
    __500GB_LUN: "{{ item.value.links.ids[0] }}"
  loop: "{{ lookup('ansible.builtin.dict', ansible_facts.devices) }}"
  when: 
    - item.value.links.ids[0] is defined
    - item.value.size == "500.00 GB"
    - item.value.holders | length == 0
    - item.value.partitions == {}  # ensure no partitiions exist on LUN already
    - __500GB_LUN ==  ""           # if this value is empty, proceed with dynamic creation

- name: Check that statically defined __500GB_LUN value meets requirements
  fail:
    msg: "__500GB_LUN value did not meet requirements: [500GB in size,no holders,no partitions] -- Review provided value for __500GB_LUN ." 
  loop: "{{ lookup('ansible.builtin.dict', ansible_facts.devices) }}"
  when: 
    - item.value.links.ids[0] is defined
    - item.value.links.ids[0] == __500GB_LUN  
    - item.value.size != "13.00 GB" or item.value.holders | length > 0 or item.value.partitions != {}

- name: Append 500GB LUN entry to LUN_list and join LUN_list and __150GB_LUN_list 
  set_fact:
    LUN_list: "{{ LUN_list + [__500GB_LUN] + __150GB_LUN_list }}"
  loop: "{{ lookup('ansible.builtin.dict', ansible_facts.devices) }}"
  when: 
    - item.value.partitions == {}  # ensure no partitiions exist on LUN already
    - item.value.links.ids[0] is defined
    - item.value.size == "13.00 GB"
    - item.value.holders | length == 0
    - item.value.partitions == {}  # ensure no partitiions exist on LUN already
    - item.value.links.ids[0] == "{{ __500GB_LUN }}" # check for LUN name


- debug:
    msg: "LUN1: {{ __500GB_LUN }}  LUN2: {{ __150GB_LUN_list[0] }} LUN3: {{ __150GB_LUN_list[1] }} 150GB_LUN_list: {{ __150GB_LUN_list | unique }}"

- debug:
    var: LUN_list | unique
  tags: developing
